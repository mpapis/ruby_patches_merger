Only in src/: ChangeLog.orig
Only in src/: ChangeLog.rej
diff -ur src/common.mk src_old/common.mk
--- src/common.mk	2013-09-22 22:47:58.359684034 +0200
+++ src_old/common.mk	2013-09-22 22:47:56.991729947 +0200
@@ -33,7 +33,7 @@
 EXTOBJS	      =
 DLDOBJS	      = $(DMYEXT)
 EXTSOLIBS     =
-MINIOBJS      = $(ARCHMINIOBJS) dmyencoding.$(OBJEXT) dmyloadpath.$(OBJEXT) miniprelude.$(OBJEXT)
+MINIOBJS      = $(ARCHMINIOBJS) dmyencoding.$(OBJEXT) dmyversion.$(OBJEXT) miniprelude.$(OBJEXT)
 ENC_MK        = enc.mk
 
 COMMONOBJS    = array.$(OBJEXT) \
@@ -84,7 +84,6 @@
 		transcode.$(OBJEXT) \
 		util.$(OBJEXT) \
 		variable.$(OBJEXT) \
-		version.$(OBJEXT) \
 		compile.$(OBJEXT) \
 		debug.$(OBJEXT) \
 		iseq.$(OBJEXT) \
@@ -100,7 +99,7 @@
 
 EXPORTOBJS    = $(DLNOBJ) \
 		encoding.$(OBJEXT) \
-		loadpath.$(OBJEXT) \
+		version.$(OBJEXT) \
 		$(COMMONOBJS)
 
 OBJS          = $(EXPORTOBJS) prelude.$(OBJEXT)
@@ -184,6 +183,9 @@
 
 prog: program wprogram
 
+loadpath: $(PREP) PHONY
+	$(MINIRUBY) -e 'p $$:'
+
 $(PREP): $(MKFILES)
 
 miniruby$(EXEEXT): config.status $(ALLOBJS) $(ARCHFILE) $(DTRACE_OBJ)
@@ -751,11 +753,9 @@
   {$(VPATH)}node.h {$(VPATH)}util.h {$(VPATH)}encoding.h \
   {$(VPATH)}oniguruma.h {$(VPATH)}internal.h {$(VPATH)}constant.h
 version.$(OBJEXT): {$(VPATH)}version.c $(RUBY_H_INCLUDES) \
-  $(srcdir)/include/ruby/version.h $(srcdir)/version.h $(srcdir)/revision.h {$(VPATH)}config.h
-loadpath.$(OBJEXT): {$(VPATH)}loadpath.c $(RUBY_H_INCLUDES) \
-  $(srcdir)/include/ruby/version.h $(srcdir)/version.h {$(VPATH)}config.h \
+  {$(VPATH)}version.h $(srcdir)/version.h $(srcdir)/revision.h {$(VPATH)}config.h \
   verconf.h
-dmyloadpath.$(OBJEXT): {$(VPATH)}dmyloadpath.c
+dmyversion.$(OBJEXT): {$(VPATH)}dmyversion.c version.$(OBJEXT)
 
 compile.$(OBJEXT): {$(VPATH)}compile.c {$(VPATH)}iseq.h \
   $(RUBY_H_INCLUDES) $(VM_CORE_H_INCLUDES) {$(VPATH)}insns.inc \
@@ -818,10 +818,6 @@
   {$(VPATH)}intern.h {$(VPATH)}missing.h {$(VPATH)}st.h \
   {$(VPATH)}transcode_data.h {$(VPATH)}ruby.h {$(VPATH)}config.h {$(VPATH)}subst.h
 
-verconf.h: verconf.in $(PREP) $(srcdir)/tool/verconf.rb $(RBCONFIG)
-	$(ECHO) creating $@
-	$(Q) $(MINIRUBY) "$(srcdir)/tool/shvar_to_cpp.rb" verconf.in > $@
-
 DTRACE_DEPENDENT_OBJS = array.$(OBJEXT) \
 		eval.$(OBJEXT) \
 		gc.$(OBJEXT) \
Only in src/: common.mk.orig
Only in src/: common.mk.rej
diff -ur src/configure.in src_old/configure.in
--- src/configure.in	2013-09-22 22:47:58.380683330 +0200
+++ src_old/configure.in	2013-09-22 22:47:54.045828819 +0200
@@ -227,9 +227,10 @@
 AC_SUBST(RUBY_BASE_NAME)
 AC_SUBST(RUBYW_BASE_NAME)
 AC_SUBST(RUBY_VERSION_NAME, '${RUBY_BASE_NAME}-${ruby_version}')
+AC_DEFINE_UNQUOTED(RUBY_BASE_NAME, "${RUBY_BASE_NAME}" !<verconf>!)
+AC_DEFINE_UNQUOTED(RUBY_VERSION_NAME, RUBY_BASE_NAME"-"RUBY_LIB_VERSION !<verconf>!)
 
 AC_CANONICAL_TARGET
-test x"$target_alias" = x &&
 target_os=`echo $target_os | sed 's/linux-gnu$/linux/;s/linux-gnu/linux-/'`
 ac_install_sh='' # unusable for extension libraries.
 
@@ -2573,8 +2574,6 @@
 
 AC_SUBST(setup)
 
-save_prefix="$prefix"
-save_exec_prefix="$exec_prefix"
 test x"$prefix" = xNONE && prefix=$ac_default_prefix
 test x"${exec_prefix}" = xNONE && exec_prefix="$prefix"
 pat=`echo "${exec_prefix}" | tr -c '\012' .`'\(.*\)'
@@ -2583,8 +2582,6 @@
     AS_CASE(["$val"], ["${exec_prefix}"*], [val='${exec_prefix}'"`expr \"$val\" : \"$pat\"`"])
     eval $var='"$val"'
 done
-prefix="$save_prefix"
-exec_prefix="$save_exec_prefix"
 
 BTESTRUBY='$(MINIRUBY)'
 if test x"$cross_compiling" = xyes; then
@@ -2647,15 +2644,6 @@
     DLDLIBS="$DLDLIBS -lc"
     ])
 
-AC_ARG_ENABLE(multiarch,
-	      AS_HELP_STRING([--enable-multiarch], [enable multiarch compatible directories]),
-	      [multiarch=], [unset multiarch])
-
-archlibdir='${libdir}/${arch}'
-sitearchlibdir='${libdir}/${sitearch}'
-archincludedir='${includedir}/${arch}'
-sitearchincludedir='${includedir}/${sitearch}'
-
 AC_ARG_WITH(soname,
 	AS_HELP_STRING([--with-soname=SONAME], [base name of shared library]),
 	[RUBY_SO_NAME=$withval], [RUBY_SO_NAME='$(RUBY_BASE_NAME)'])
@@ -2669,7 +2657,7 @@
 AC_ARG_ENABLE(shared,
        AS_HELP_STRING([--enable-shared], [build a shared library for Ruby]),
        [enable_shared=$enableval])
-libprefix=${multiarch+'$(archlibdir)'}${multiarch-'$(libdir)'}
+libprefix='$(libdir)'
 LIBRUBY_RELATIVE=${load_relative-no}
 AS_CASE("$enable_shared", [yes], [
   LIBRUBY='$(LIBRUBY_SO)'
@@ -2688,7 +2676,6 @@
     AS_CASE(["$libdir"], ['${exec_prefix}/'*], [libdir_basename=`basename "$libdir"`])
   fi
   AC_DEFINE_UNQUOTED(LIBDIR_BASENAME, ["${libdir_basename}"])
-  libdir_basename="${libdir_basename}"${multiarch+'/${arch}'}
 
   AS_CASE(["$target_os"],
     [freebsd*|dragonfly*], [],
@@ -2709,8 +2696,7 @@
 	LIBRUBY_DLDFLAGS='-Wl,-soname,lib$(RUBY_SO_NAME).so.$(MAJOR).$(MINOR)'" $LDFLAGS_OPTDIR"
 	LIBRUBY_ALIASES='lib$(RUBY_SO_NAME).so.$(MAJOR).$(MINOR) lib$(RUBY_SO_NAME).so'
 	if test "$load_relative" = yes; then
-	    libprefix="'\$\${ORIGIN}/../${libdir_basename}'"
-	    LIBRUBY_RPATHFLAGS="-Wl,-rpath,${libprefix}"
+	    LIBRUBY_RPATHFLAGS="'-Wl,-rpath,\$\${ORIGIN}/../${libdir_basename}'"
 	    LIBRUBY_RELATIVE=yes
 	fi
 	],
@@ -2824,7 +2810,7 @@
 ])
 if test "$enable_rpath" = yes; then
     test -z "$LIBRUBY_RPATHFLAGS" || LIBRUBY_RPATHFLAGS="$LIBRUBY_RPATHFLAGS "
-    LIBRUBY_RPATHFLAGS="$LIBRUBY_RPATHFLAGS${linker_flag}-R ${linker_flag}${libprefix} -L${libprefix}"
+    LIBRUBY_RPATHFLAGS="$LIBRUBY_RPATHFLAGS${linker_flag}-R ${linker_flag}${libprefix} -L\$(libdir)"
     LIBRUBYARG_SHARED="$LIBRUBY_RPATHFLAGS $LIBRUBYARG_SHARED"
     LIBRUBYARG_STATIC="$LIBRUBY_RPATHFLAGS $LIBRUBYARG_STATIC"
 fi
@@ -3222,17 +3208,64 @@
 AC_ARG_ENABLE(multiarch,
 	      AS_HELP_STRING([--enable-multiarch], [enable multiarch compatible directories]),
 	      [multiarch=], [unset multiarch])
-if test ${multiarch+set}; then
-   AC_DEFINE(ENABLE_MULTIARCH)
-fi
 
 archlibdir='${libdir}/${arch}'
 sitearchlibdir='${libdir}/${sitearch}'
 archincludedir='${includedir}/${arch}'
 sitearchincludedir='${includedir}/${sitearch}'
-if test ${libdir_basename+set}; then
-    libdir_basename="${libdir_basename}"${multiarch+'/${arch}'}
-fi
+
+shvar_to_cpp() {
+    var="$1" val="$2"
+    exec_prefix_pat="`echo \"${exec_prefix}\" | sed 's/\\./\\\\./g'`"
+    arch_pat="`echo \"${arch}\" | sed 's/\\./\\\\./g'`"
+    sitearch_pat="`echo \"${sitearch}\" | sed 's/\\./\\\\./g'`"
+    val="`echo '\"'\"${val}\"'\"' |
+	sed \
+	    -e 's/\${\([[A-Z][A-Z_]]*\)}/\"\1\"/g' \
+	    -e 's|\${sitearchlibdir}|'\"${sitearchlibdir}|g\" \
+	    -e 's|\${sitearchincludedir}|'\"${sitearchincludedir}|g\" \
+	    -e 's|\${archlibdir}|'\"${archlibdir}|g\" \
+	    -e 's|\${archincludedir}|'\"${archincludedir}|g\" \
+	    -e 's|\${libdir}|'\"${libdir}|g\" \
+	    -e 's/\${ruby_version}/\"RUBY_LIB_VERSION\"/g' \
+	    -e 's/\${arch}/\"arch\"/g' \
+	    -e 's/\${sitearch}/\"arch\"/g' \
+	    -e 's/\${vendorarchdir}/\"RUBY_VENDOR_ARCH_LIB\"/g' \
+	    -e 's/\${sitearchdir}/\"RUBY_SITE_ARCH_LIB\"/g' \
+	    -e 's/\${vendorlibdir}/\"RUBY_VENDOR_LIB2\"/g' \
+	    -e 's/\${sitelibdir}/\"RUBY_SITE_LIB2\"/g' \
+	    -e 's/\${vendordir}/\"RUBY_VENDOR_LIB\"/g' \
+	    -e 's/\${sitedir}/\"RUBY_SITE_LIB\"/g' \
+	    -e 's/\${rubylibdir}/\"RUBY_LIB\"/g' \
+	    -e 's/\${rubylibprefix}/\"RUBY_LIB_PREFIX\"/g' \
+	    -e 's/\${rubyarchprefix}/\"RUBY_ARCH_PREFIX_FOR(arch)\"/g' \
+	    -e 's/\${rubysitearchprefix}/\"RUBY_SITEARCH_PREFIX_FOR(arch)\"/g' \
+	    -e 's/\${exec_prefix}/\"RUBY_EXEC_PREFIX\"/g' \
+	    -e \"s|${exec_prefix_pat}/|\"'\"RUBY_EXEC_PREFIX\"/|g' \
+	    -e \"s|${arch_pat}|\"'\"arch\"|g' \
+	    -e \"s|${sitearch_pat}|\"'\"sitearch\"|g' \
+	    -e 's|^\\\"NONE/|RUBY_EXEC_PREFIX\\\"/|' \
+	    -e 's|^\\\"NONE\\\"|\\\"'\"${prefix}\"'\\\"|' \
+	    -e 's/^\\\"\\\"\(.\)/\1/;s/\(.\)\\\"\\\"$/\1/'
+	`"
+    eval $var='"$val"'
+}
+
+unexpand_shvar() {
+    var=$1 n="" v="" expr=""
+    shift
+    test "$#" -eq 0 && return
+    for n do
+        eval v='"$'$n'"'
+	v="`echo \"$v\" | sed -e ['s/${[^${}\"]*}/\"&\"/g'] -e ['s/[][$|.\\?*]/\\\\&/g']`"
+	if test -n "$v"; then
+	    expr=["${expr};s|"'\("[^$"]*\)'"$v|\\1\${$n}\"|g"]
+	    AS_CASE(["$v"], [*'${'*'}'*], [expr=["$expr;s|$v|\"\${$n}\"|g"]])
+	fi
+    done
+    expr=['s/${[^${}"]*}/"&"/g;'"${expr};"'s/"\(\${[^${}"]*}\)"/\1/g']
+    eval $var='"`echo \"\\\"${'$var'}\\\"\" | sed \"$expr;s/\\\"//g\"`"'
+}
 
 rubylibprefix='${libdir}/${RUBY_BASE_NAME}'
 AC_ARG_WITH(rubylibprefix,
@@ -3288,13 +3321,9 @@
     test -f verconf.h || > verconf.h
     ruby_version="`$CPP -I. -I"${srcdir}" -I"${srcdir}/include" conftest.c | sed '/^ruby_version=/!d;s/ //g'`"
     eval $ruby_version
-elif test -z "${ruby_version}"; then
-    AC_MSG_ERROR([No ruby version, No place for bundled libraries])
 else
     RUBY_LIB_VERSION="\"${ruby_version}\""
 fi
-AC_SUBST(RUBY_LIB_VERSION_STYLE)
-AC_SUBST(RUBY_LIB_VERSION)
 
 AC_ARG_WITH(sitedir,
 	    AS_HELP_STRING([--with-sitedir=DIR], [site libraries in DIR [[RUBY_LIB_PREFIX/site_ruby]], "no" to disable site directory]),
@@ -3340,7 +3369,7 @@
 else
     AC_DEFINE_UNQUOTED(RUBY_LIB_VERSION, [$RUBY_LIB_VERSION] !<verconf>!)
 fi
-AC_DEFINE_UNQUOTED(RUBY_EXEC_PREFIX, ${RUBY_EXEC_PREFIX} !<verconf>!)
+AC_DEFINE_UNQUOTED(RUBY_EXEC_PREFIX, ${RUBY_EXEC_PREFIX})
 AC_DEFINE_UNQUOTED(RUBY_LIB_PREFIX, ${RUBY_LIB_PREFIX} !<verconf>!)
 AC_DEFINE_UNQUOTED(RUBY_ARCH_PREFIX_FOR(arch), ${RUBY_ARCH_PREFIX_FOR} !<verconf>!)
 AC_DEFINE_UNQUOTED(RUBY_SITEARCH_PREFIX_FOR(arch), ${RUBY_SITEARCH_PREFIX_FOR} !<verconf>!)
@@ -3368,7 +3397,6 @@
     AC_DEFINE_UNQUOTED(RUBY_VENDOR_ARCH_LIB_FOR(arch), ${RUBY_VENDOR_ARCH_LIB_FOR} !<verconf>!)
 fi
 
-AC_SUBST(libdirname, ${multiarch+arch}libdir)
 AC_SUBST(archlibdir)dnl
 AC_SUBST(sitearchlibdir)dnl
 AC_SUBST(archincludedir)dnl
@@ -3394,7 +3422,7 @@
 	AC_TRY_COMPILE([const char arch[] = __ARCHITECTURE__;], [puts(arch);],
 	     [rb_cv_architecture_available=yes], [rb_cv_architecture_available=no]))
     if test "${rb_cv_architecture_available}" = yes; then
-	AC_DEFINE_UNQUOTED(RUBY_PLATFORM_CPU, __ARCHITECTURE__)
+	AC_DEFINE_UNQUOTED(RUBY_PLATFORM_CPU, __ARCHITECTURE__ !<verconf>!)
     else
 	for archs in ${universal_archnames}; do
 	    cpu=`echo $archs | sed 's/.*=//'`
@@ -3406,23 +3434,24 @@
     test "$ac_cv_type_long_long" = yes && ints="'long long' $ints"
     AC_SUBST(UNIVERSAL_ARCHNAMES, "${universal_archnames}")
     AC_SUBST(UNIVERSAL_INTS, "${ints}")
-    AC_DEFINE_UNQUOTED(RUBY_PLATFORM_OS, "${target_os}")
-    AC_DEFINE_UNQUOTED(RUBY_ARCH, "universal-"RUBY_PLATFORM_OS)
-    AC_DEFINE_UNQUOTED(RUBY_PLATFORM, "universal."RUBY_PLATFORM_CPU"-"RUBY_PLATFORM_OS)
+    AC_DEFINE_UNQUOTED(RUBY_PLATFORM_OS, "${target_os}" !<verconf>!)
+    AC_DEFINE_UNQUOTED(RUBY_ARCH, "universal-"RUBY_PLATFORM_OS !<verconf>!)
+    AC_DEFINE_UNQUOTED(RUBY_PLATFORM, "universal."RUBY_PLATFORM_CPU"-"RUBY_PLATFORM_OS !<verconf>!)
 else
     arch="${target_cpu}-${target_os}"
-    AC_DEFINE_UNQUOTED(RUBY_PLATFORM, "${arch}")
+    AC_DEFINE_UNQUOTED(RUBY_PLATFORM, "${arch}" !<verconf>!)
 fi
 
 unset sitearch
 AS_CASE(["$target_os"],[mingw*],[sitearch="$target_cpu-$rb_cv_msvcrt"])
+test ${sitearch+set} && AC_DEFINE_UNQUOTED(RUBY_SITEARCH, "${sitearch}" !<verconf>!)
 : ${sitearch='${arch}'}
 
 AC_ARG_WITH(search-path,
 		AS_HELP_STRING([--with-search-path=DIR], [specify the additional search path]),
 		[search_path=$withval])
 if test "$search_path" != ""; then
-    AC_SUBST(RUBY_SEARCH_PATH, $search_path)
+    AC_DEFINE_UNQUOTED(RUBY_SEARCH_PATH,"$search_path" !<verconf>!)
 fi
 
 AC_ARG_WITH(rubyhdrdir,
@@ -3504,8 +3533,7 @@
   echo "#endif /* $guard */"
 } | tr -d '\015' |
 ${srcdir}/tool/ifchange "${config_h}" -
-sed -n 's/ !<verconf>!$//p' confdefs.h | ${srcdir}/tool/ifchange verconf.in -
-rm -f verconf.h
+sed -n 's/ !<verconf>!$//p' confdefs.h | ${srcdir}/tool/ifchange verconf.h -
 tr -d '\015' < largefile.h > confdefs.h
 rm largefile.h
 
Only in src/: configure.in.orig
Only in src/: configure.in.rej
diff -ur src/dmyversion.c src_old/dmyversion.c
--- src/dmyversion.c	2013-09-22 22:47:58.326685142 +0200
+++ src_old/dmyversion.c	2013-09-22 22:47:54.039829020 +0200
@@ -1,2 +1,2 @@
-const char ruby_exec_prefix[] = "";
-const char ruby_initial_load_paths[] = "";
+#define NO_INITIAL_LOAD_PATH 1
+#include "version.c"
diff -ur src/Makefile.in src_old/Makefile.in
--- src/Makefile.in	2013-09-22 22:47:58.369683699 +0200
+++ src_old/Makefile.in	2013-09-22 22:47:54.068828047 +0200
@@ -460,8 +460,3 @@
 	  $(srcdir)/tool/instruction.rb $(srcdir)/tool/insns2vm.rb
 	$(ECHO) generating $@
 	$(Q) $(BASERUBY) -Ku $(srcdir)/tool/insns2vm.rb $(INSNS2VMOPT) $@
-
-loadpath: verconf.h
-	@$(CPP) $(XCFLAGS) $(CPPFLAGS) $(srcdir)/loadpath.c | \
-	sed -e '1,/^const char ruby_initial_load_paths/d;/;/,$$d' \
-	    -e '/^ /!d;s/ *"\\0"$$//;s/" *"//g'
Only in src/: Makefile.in.orig
diff -ur src/ruby.c src_old/ruby.c
--- src/ruby.c	2013-09-22 22:47:58.355684169 +0200
+++ src_old/ruby.c	2013-09-22 22:47:54.048828718 +0200
@@ -464,30 +464,15 @@
 #endif
 	const ptrdiff_t bindir_len = (ptrdiff_t)sizeof(bindir) - 1;
 	const ptrdiff_t libdir_len = (ptrdiff_t)sizeof(libdir) - 1;
-
-#ifdef ENABLE_MULTIARCH
-	char *p2 = NULL;
-
-      multiarch:
-#endif
-	if (p - libpath >= bindir_len && !STRNCASECMP(p - bindir_len, bindir, bindir_len)) {
+	*p = 0;
+	if (p - libpath >= bindir_len && !STRCASECMP(p - bindir_len, bindir)) {
 	    p -= bindir_len;
+	    *p = 0;
 	}
-	else if (p - libpath >= libdir_len && !strncmp(p - libdir_len, libdir, libdir_len)) {
+	else if (p - libpath >= libdir_len && !strcmp(p - libdir_len, libdir)) {
 	    p -= libdir_len;
+	    *p = 0;
 	}
-#ifdef ENABLE_MULTIARCH
-	else if (p2) {
-	    p = p2;
-	}
-	else {
-	    p2 = p;
-	    p = rb_enc_path_last_separator(libpath, p, rb_ascii8bit_encoding());
-	    if (p) goto multiarch;
-	    p = p2;
-	}
-#endif
-	*p = 0;
     }
 #if !VARIABLE_LIBPATH
     else {
@@ -507,10 +492,9 @@
 
 #define RUBY_RELATIVE(path, len) rb_str_buf_cat(BASEPATH(), (path), (len))
 #else
-    extern const char ruby_exec_prefix[];
-    const size_t exec_prefix_len = strlen(ruby_exec_prefix);
+    static const char exec_prefix[] = RUBY_EXEC_PREFIX;
 #define RUBY_RELATIVE(path, len) rubylib_mangled_path((path), (len))
-#define PREFIX_PATH() RUBY_RELATIVE(ruby_exec_prefix, exec_prefix_len)
+#define PREFIX_PATH() RUBY_RELATIVE(exec_prefix, sizeof(exec_prefix)-1)
 #endif
     load_path = GET_VM()->load_path;
 
Only in src/: ruby.c.orig
diff -ur src/tool/rbinstall.rb src_old/tool/rbinstall.rb
--- src/tool/rbinstall.rb	2013-09-22 22:47:57.083726859 +0200
+++ src_old/tool/rbinstall.rb	2013-09-22 22:47:57.062727564 +0200
@@ -304,7 +304,7 @@
 goruby_install_name = "go" + ruby_install_name
 
 bindir = CONFIG["bindir", true]
-libdir = CONFIG[COFNIG["libdirname", true], true]
+libdir = CONFIG["libdir", true]
 rubyhdrdir = CONFIG["rubyhdrdir", true]
 archhdrdir = CONFIG["rubyarchhdrdir"] || (rubyhdrdir + "/" + CONFIG['arch'])
 rubylibdir = CONFIG["rubylibdir", true]
diff -ur src/version.c src_old/version.c
--- src/version.c	2013-09-22 22:47:58.355684169 +0200
+++ src_old/version.c	2013-09-22 22:47:54.046828786 +0200
@@ -9,6 +9,7 @@
 
 **********************************************************************/
 
+#include "verconf.h"
 #include "ruby/ruby.h"
 #include "version.h"
 #include <stdio.h>
@@ -38,8 +39,6 @@
 #define RUBY_VENDOR_LIB RUBY_LIB_PREFIX"/vendor_ruby"
 #endif
 
-typedef char ruby_lib_version_string[(int)sizeof(RUBY_LIB_VERSION) - 2];
-
 #define RUBY_LIB                    RUBY_LIB_PREFIX  "/"RUBY_LIB_VERSION
 #define RUBY_SITE_LIB2              RUBY_SITE_LIB    "/"RUBY_LIB_VERSION
 #define RUBY_VENDOR_LIB2            RUBY_VENDOR_LIB  "/"RUBY_LIB_VERSION
@@ -66,9 +65,6 @@
 const char ruby_copyright[] = RUBY_COPYRIGHT;
 const char ruby_engine[] = "ruby";
 VALUE ruby_engine_name = Qnil;
-#if !defined(LOAD_RELATIVE) || !LOAD_RELATIVE
-const char ruby_exec_prefix[] = RUBY_EXEC_PREFIX;
-#endif
 
 const char ruby_initial_load_paths[] =
 #ifndef NO_INITIAL_LOAD_PATH
@@ -101,3 +97,59 @@
 #endif
     "";
 
+/*! Defines platform-depended Ruby-level constants */
+void
+Init_version(void)
+{
+    /*
+     * The running version of ruby
+     */
+    rb_define_global_const("RUBY_VERSION", MKSTR(version));
+    /*
+     * The date this ruby was released
+     */
+    rb_define_global_const("RUBY_RELEASE_DATE", MKSTR(release_date));
+    /*
+     * The platform for this ruby
+     */
+    rb_define_global_const("RUBY_PLATFORM", MKSTR(platform));
+    /*
+     * The patchlevel for this ruby.  If this is a development build of ruby
+     * the patchlevel will be -1
+     */
+    rb_define_global_const("RUBY_PATCHLEVEL", INT2FIX(RUBY_PATCHLEVEL));
+    /*
+     * The SVN revision for this ruby.
+     */
+    rb_define_global_const("RUBY_REVISION", INT2FIX(RUBY_REVISION));
+    /*
+     * The full ruby version string, like <tt>ruby -v</tt> prints'
+     */
+    rb_define_global_const("RUBY_DESCRIPTION", MKSTR(description));
+    /*
+     * The copyright string for ruby
+     */
+    rb_define_global_const("RUBY_COPYRIGHT", MKSTR(copyright));
+    /*
+     * The engine or interpreter this ruby uses.
+     */
+    rb_define_global_const("RUBY_ENGINE", ruby_engine_name = MKSTR(engine));
+}
+
+/*! Prints the version information of the CRuby interpreter to stdout. */
+void
+ruby_show_version(void)
+{
+    PRINT(description);
+    fflush(stdout);
+}
+
+/*! Prints the copyright notice of the CRuby interpreter to stdout and \em exits
+ *  this process successfully.
+ */
+void
+ruby_show_copyright(void)
+{
+    PRINT(copyright);
+    exit(0);
+}
Only in src/: version.c.orig
Only in src/: version.c.rej
diff -ur src/win32/Makefile.sub src_old/win32/Makefile.sub
--- src/win32/Makefile.sub	2013-09-22 22:47:58.337684773 +0200
+++ src_old/win32/Makefile.sub	2013-09-22 22:47:56.985730148 +0200
@@ -680,8 +680,6 @@
 #define EXECUTABLE_EXTS $(EXECUTABLE_EXTS)
 #define RUBY_COREDLL "$(RT)"
 #define LIBRUBY_SO "$(LIBRUBY_SO)"
-#define RUBY_PLATFORM "$(arch)"
-#define RUBY_SITEARCH "$(sitearch)"
 #if 0
 $(BANG)if "$(RUBY_SO_NAME)"!="$$(RUBY_SO_NAME)" || "$(ARCH)-$(PLATFORM)"!="$$(ARCH)-$$(PLATFORM)"
 config.h: nul
@@ -689,13 +687,14 @@
 #endif
 #endif /* $(guard) */
 <<
-	@echo Creating verconf.in
-	@$(IFCHANGE) verconf.in <<
+	@echo Creating verconf.h
+	@$(IFCHANGE) verconf.h <<
 #define RUBY_LIB_VERSION_STYLE 3	/* full */
-#define RUBY_EXEC_PREFIX ""
+#define RUBY_LIB_PREFIX "/lib/$(RUBY_BASE_NAME)"
+#define RUBY_PLATFORM "$(arch)"
+#define RUBY_SITEARCH "$(sitearch)"
 <<
 	@exit > $(@:/=\)
-	@if exist verconf.h del verconf.h
 
 #!if exist($(RUBY_CONFIG_H))
 #! if exist(config_h.bak)
@@ -1112,8 +1111,3 @@
 ! if [del insns_rules.mk > nul]
 ! endif
 !endif
-
-loadpath: verconf.h
-	@$(CPP) $(XCFLAGS) $(CPPFLAGS) $(srcdir)/loadpath.c | \
-	sed -e '1,/^const char ruby_initial_load_paths/d;/;/,$$d' \
-	    -e '/^^ /!d;s/ *"\\\\0"$$//;s/" *"//g'
Only in src/win32: Makefile.sub.orig
